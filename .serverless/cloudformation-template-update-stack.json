{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "CreateStarshipLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-reto-indra-dev-createStarship"
      }
    },
    "GetRangeLimitStarshipLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-reto-indra-dev-getRangeLimitStarship"
      }
    },
    "GetAllStarshipLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-reto-indra-dev-getAllStarship"
      }
    },
    "PutStarshipLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-reto-indra-dev-putStarship"
      }
    },
    "DeleteStarshipLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-reto-indra-dev-deleteStarship"
      }
    },
    "CreateVehicleLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-reto-indra-dev-createVehicle"
      }
    },
    "GetRangeLimitVehicleLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-reto-indra-dev-getRangeLimitVehicle"
      }
    },
    "GetAllVehicleLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-reto-indra-dev-getAllVehicle"
      }
    },
    "PutVehicleLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-reto-indra-dev-putVehicle"
      }
    },
    "DeleteVehicleLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-reto-indra-dev-deleteVehicle"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "aws-reto-indra",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-reto-indra-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-reto-indra-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:DescribeTable",
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteITem"
                  ],
                  "Resource": [
                    "arn:aws:dynamodb:us-east-2:*:table/starship",
                    "arn:aws:dynamodb:us-east-2:*:table/vehicle"
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "aws-reto-indra",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "CreateStarshipLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-reto-indra/dev/1669228669634-2022-11-23T18:37:49.634Z/createStarship.zip"
        },
        "Handler": "src/handler.createStarship",
        "Runtime": "nodejs12.x",
        "FunctionName": "aws-reto-indra-dev-createStarship",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "TABLE_STARSHIP": "starship",
            "TABLE_VEHICLE": "vehicle"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateStarshipLogGroup"
      ]
    },
    "GetRangeLimitStarshipLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-reto-indra/dev/1669228669634-2022-11-23T18:37:49.634Z/getRangeLimitStarship.zip"
        },
        "Handler": "src/handler.getRangeLimitStarship",
        "Runtime": "nodejs12.x",
        "FunctionName": "aws-reto-indra-dev-getRangeLimitStarship",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "TABLE_STARSHIP": "starship",
            "TABLE_VEHICLE": "vehicle"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetRangeLimitStarshipLogGroup"
      ]
    },
    "GetAllStarshipLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-reto-indra/dev/1669228669634-2022-11-23T18:37:49.634Z/getAllStarship.zip"
        },
        "Handler": "src/handler.getAllStarship",
        "Runtime": "nodejs12.x",
        "FunctionName": "aws-reto-indra-dev-getAllStarship",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "TABLE_STARSHIP": "starship",
            "TABLE_VEHICLE": "vehicle"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetAllStarshipLogGroup"
      ]
    },
    "PutStarshipLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-reto-indra/dev/1669228669634-2022-11-23T18:37:49.634Z/putStarship.zip"
        },
        "Handler": "src/handler.putStarship",
        "Runtime": "nodejs12.x",
        "FunctionName": "aws-reto-indra-dev-putStarship",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "TABLE_STARSHIP": "starship",
            "TABLE_VEHICLE": "vehicle"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "PutStarshipLogGroup"
      ]
    },
    "DeleteStarshipLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-reto-indra/dev/1669228669634-2022-11-23T18:37:49.634Z/deleteStarship.zip"
        },
        "Handler": "src/handler.deleteStarship",
        "Runtime": "nodejs12.x",
        "FunctionName": "aws-reto-indra-dev-deleteStarship",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "TABLE_STARSHIP": "starship",
            "TABLE_VEHICLE": "vehicle"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "DeleteStarshipLogGroup"
      ]
    },
    "CreateVehicleLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-reto-indra/dev/1669228669634-2022-11-23T18:37:49.634Z/createVehicle.zip"
        },
        "Handler": "src/handler.createVehicle",
        "Runtime": "nodejs12.x",
        "FunctionName": "aws-reto-indra-dev-createVehicle",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "TABLE_STARSHIP": "starship",
            "TABLE_VEHICLE": "vehicle"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateVehicleLogGroup"
      ]
    },
    "GetRangeLimitVehicleLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-reto-indra/dev/1669228669634-2022-11-23T18:37:49.634Z/getRangeLimitVehicle.zip"
        },
        "Handler": "src/handler.getRangeLimitVehicle",
        "Runtime": "nodejs12.x",
        "FunctionName": "aws-reto-indra-dev-getRangeLimitVehicle",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "TABLE_STARSHIP": "starship",
            "TABLE_VEHICLE": "vehicle"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetRangeLimitVehicleLogGroup"
      ]
    },
    "GetAllVehicleLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-reto-indra/dev/1669228669634-2022-11-23T18:37:49.634Z/getAllVehicle.zip"
        },
        "Handler": "src/handler.getAllVehicle",
        "Runtime": "nodejs12.x",
        "FunctionName": "aws-reto-indra-dev-getAllVehicle",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "TABLE_STARSHIP": "starship",
            "TABLE_VEHICLE": "vehicle"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetAllVehicleLogGroup"
      ]
    },
    "PutVehicleLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-reto-indra/dev/1669228669634-2022-11-23T18:37:49.634Z/putVehicle.zip"
        },
        "Handler": "src/handler.putVehicle",
        "Runtime": "nodejs12.x",
        "FunctionName": "aws-reto-indra-dev-putVehicle",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "TABLE_STARSHIP": "starship",
            "TABLE_VEHICLE": "vehicle"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "PutVehicleLogGroup"
      ]
    },
    "DeleteVehicleLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-reto-indra/dev/1669228669634-2022-11-23T18:37:49.634Z/deleteVehicle.zip"
        },
        "Handler": "src/handler.deleteVehicle",
        "Runtime": "nodejs12.x",
        "FunctionName": "aws-reto-indra-dev-deleteVehicle",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "TABLE_STARSHIP": "starship",
            "TABLE_VEHICLE": "vehicle"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "DeleteVehicleLogGroup"
      ]
    },
    "CreateStarshipLambdaVersionaie6ibp9LAOjqdQ5xKgaHEVcrje9AN4BaAz1ibYfVVM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateStarshipLambdaFunction"
        },
        "CodeSha256": "jr6W69zuKi6Irebr46TP+FRiMqXWyRmjX1ug4eGkmyA="
      }
    },
    "GetRangeLimitStarshipLambdaVersioniDq0qWf4zn7yRqHKlZi8UGLYcf88lSfwOmlL328x1OA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetRangeLimitStarshipLambdaFunction"
        },
        "CodeSha256": "jr6W69zuKi6Irebr46TP+FRiMqXWyRmjX1ug4eGkmyA="
      }
    },
    "GetAllStarshipLambdaVersionqY4h8ufZc98a8NXsyO0APsvEnYOyYUaVhxGCWBSfggA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllStarshipLambdaFunction"
        },
        "CodeSha256": "jr6W69zuKi6Irebr46TP+FRiMqXWyRmjX1ug4eGkmyA="
      }
    },
    "DeleteStarshipLambdaVersionObkYTBQanR836wBLYTnI0ROhrZBZQD7Z7Vez9KiPbs": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteStarshipLambdaFunction"
        },
        "CodeSha256": "jr6W69zuKi6Irebr46TP+FRiMqXWyRmjX1ug4eGkmyA="
      }
    },
    "CreateVehicleLambdaVersiont0WFm9jBrRtphjWeHnKHBHTg53boYq1AdBZxwDzf4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateVehicleLambdaFunction"
        },
        "CodeSha256": "jr6W69zuKi6Irebr46TP+FRiMqXWyRmjX1ug4eGkmyA="
      }
    },
    "GetRangeLimitVehicleLambdaVersionJECxOImu3P6EpVHXYN6vr1Z9sM8qFrZo0n3e3VbMnE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetRangeLimitVehicleLambdaFunction"
        },
        "CodeSha256": "jr6W69zuKi6Irebr46TP+FRiMqXWyRmjX1ug4eGkmyA="
      }
    },
    "GetAllVehicleLambdaVersionceUBGMTkXVqQGNxrjnqsnozpc0WuiHAMbCgRztpsTI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllVehicleLambdaFunction"
        },
        "CodeSha256": "jr6W69zuKi6Irebr46TP+FRiMqXWyRmjX1ug4eGkmyA="
      }
    },
    "PutStarshipLambdaVersionoBbk34EBdMhLfyUbJLUsbYWiKuZGpPJJZBHVz4zagyw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PutStarshipLambdaFunction"
        },
        "CodeSha256": "jr6W69zuKi6Irebr46TP+FRiMqXWyRmjX1ug4eGkmyA="
      }
    },
    "PutVehicleLambdaVersioniXSo8WiWC2VAwvdw1uTl1Els7T0BqOrV4xo9woapI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PutVehicleLambdaFunction"
        },
        "CodeSha256": "jr6W69zuKi6Irebr46TP+FRiMqXWyRmjX1ug4eGkmyA="
      }
    },
    "DeleteVehicleLambdaVersionmGDyA9u2hlbz32KmtyyAkTXg5f2dz6N7cCLsYuLKTZI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteVehicleLambdaFunction"
        },
        "CodeSha256": "jr6W69zuKi6Irebr46TP+FRiMqXWyRmjX1ug4eGkmyA="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-aws-reto-indra",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceStarship": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "starShip",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceStarshipCreate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceStarship"
        },
        "PathPart": "create",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceStarshipCreateNumberVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceStarshipCreate"
        },
        "PathPart": "{number}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceStarshipGetrangelimit": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceStarship"
        },
        "PathPart": "getRangeLimit",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceStarshipGetrangelimitNumberVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceStarshipGetrangelimit"
        },
        "PathPart": "{number}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceStarshipGetall": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceStarship"
        },
        "PathPart": "getAll",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceStarshipUpdate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceStarship"
        },
        "PathPart": "update",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceStarshipUpdateIdVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceStarshipUpdate"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceStarshipDelete": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceStarship"
        },
        "PathPart": "delete",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceStarshipDeleteIdVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceStarshipDelete"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceVehicle": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "vehicle",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceVehicleCreate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceVehicle"
        },
        "PathPart": "create",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceVehicleCreateNumberVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceVehicleCreate"
        },
        "PathPart": "{number}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceVehicleGetrangelimit": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceVehicle"
        },
        "PathPart": "getRangeLimit",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceVehicleGetrangelimitNumberVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceVehicleGetrangelimit"
        },
        "PathPart": "{number}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceVehicleGetall": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceVehicle"
        },
        "PathPart": "getAll",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceVehicleUpdate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceVehicle"
        },
        "PathPart": "update",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceVehicleUpdateIdVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceVehicleUpdate"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceVehicleDelete": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceVehicle"
        },
        "PathPart": "delete",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceVehicleDeleteIdVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceVehicleDelete"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodStarshipCreateNumberVarPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {
          "method.request.path.number": true
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceStarshipCreateNumberVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CreateStarshipLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "ApiGatewayAwsretoindraRequestValidator"
        }
      },
      "DependsOn": [
        "CreateStarshipLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodStarshipGetrangelimitNumberVarGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {
          "method.request.path.number": true
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceStarshipGetrangelimitNumberVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetRangeLimitStarshipLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "ApiGatewayAwsretoindraRequestValidator"
        }
      },
      "DependsOn": [
        "GetRangeLimitStarshipLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodStarshipGetallGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceStarshipGetall"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetAllStarshipLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "GetAllStarshipLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodStarshipUpdateIdVarPut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {
          "method.request.path.id": true
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceStarshipUpdateIdVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "PutStarshipLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "ApiGatewayAwsretoindraRequestValidator"
        }
      },
      "DependsOn": [
        "PutStarshipLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodStarshipDeleteIdVarDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {
          "method.request.path.id": true
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceStarshipDeleteIdVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeleteStarshipLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "ApiGatewayAwsretoindraRequestValidator"
        }
      },
      "DependsOn": [
        "DeleteStarshipLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodVehicleCreateNumberVarPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {
          "method.request.path.number": true
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceVehicleCreateNumberVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CreateVehicleLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "ApiGatewayAwsretoindraRequestValidator"
        }
      },
      "DependsOn": [
        "CreateVehicleLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodVehicleGetrangelimitNumberVarGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {
          "method.request.path.number": true
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceVehicleGetrangelimitNumberVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetRangeLimitVehicleLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "ApiGatewayAwsretoindraRequestValidator"
        }
      },
      "DependsOn": [
        "GetRangeLimitVehicleLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodVehicleGetallGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceVehicleGetall"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetAllVehicleLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "GetAllVehicleLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodVehicleUpdateIdVarPut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {
          "method.request.path.id": true
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceVehicleUpdateIdVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "PutVehicleLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "ApiGatewayAwsretoindraRequestValidator"
        }
      },
      "DependsOn": [
        "PutVehicleLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodVehicleDeleteIdVarDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {
          "method.request.path.id": true
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceVehicleDeleteIdVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeleteVehicleLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "ApiGatewayAwsretoindraRequestValidator"
        }
      },
      "DependsOn": [
        "DeleteVehicleLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayAwsretoindraRequestValidator": {
      "Type": "AWS::ApiGateway::RequestValidator",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ValidateRequestBody": true,
        "ValidateRequestParameters": true,
        "Name": "aws-reto-indra-dev | Validate request body and querystring parameters"
      }
    },
    "ApiGatewayDeployment1669228622319": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodStarshipCreateNumberVarPost",
        "ApiGatewayMethodStarshipGetrangelimitNumberVarGet",
        "ApiGatewayMethodStarshipGetallGet",
        "ApiGatewayMethodStarshipUpdateIdVarPut",
        "ApiGatewayMethodStarshipDeleteIdVarDelete",
        "ApiGatewayMethodVehicleCreateNumberVarPost",
        "ApiGatewayMethodVehicleGetrangelimitNumberVarGet",
        "ApiGatewayMethodVehicleGetallGet",
        "ApiGatewayMethodVehicleUpdateIdVarPut",
        "ApiGatewayMethodVehicleDeleteIdVarDelete"
      ]
    },
    "CreateStarshipLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateStarshipLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "GetRangeLimitStarshipLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetRangeLimitStarshipLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "GetAllStarshipLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetAllStarshipLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "PutStarshipLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PutStarshipLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeleteStarshipLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteStarshipLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CreateVehicleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateVehicleLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "GetRangeLimitVehicleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetRangeLimitVehicleLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "GetAllVehicleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetAllVehicleLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "PutVehicleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PutVehicleLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeleteVehicleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteVehicleLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "StarshipTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "starship"
      }
    },
    "VehicleTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "vehicle"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-aws-reto-indra-dev-ServerlessDeploymentBucketName"
      }
    },
    "CreateStarshipLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateStarshipLambdaVersionaie6ibp9LAOjqdQ5xKgaHEVcrje9AN4BaAz1ibYfVVM"
      },
      "Export": {
        "Name": "sls-aws-reto-indra-dev-CreateStarshipLambdaFunctionQualifiedArn"
      }
    },
    "GetRangeLimitStarshipLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetRangeLimitStarshipLambdaVersioniDq0qWf4zn7yRqHKlZi8UGLYcf88lSfwOmlL328x1OA"
      },
      "Export": {
        "Name": "sls-aws-reto-indra-dev-GetRangeLimitStarshipLambdaFunctionQualifiedArn"
      }
    },
    "GetAllStarshipLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetAllStarshipLambdaVersionqY4h8ufZc98a8NXsyO0APsvEnYOyYUaVhxGCWBSfggA"
      },
      "Export": {
        "Name": "sls-aws-reto-indra-dev-GetAllStarshipLambdaFunctionQualifiedArn"
      }
    },
    "DeleteStarshipLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteStarshipLambdaVersionObkYTBQanR836wBLYTnI0ROhrZBZQD7Z7Vez9KiPbs"
      },
      "Export": {
        "Name": "sls-aws-reto-indra-dev-DeleteStarshipLambdaFunctionQualifiedArn"
      }
    },
    "CreateVehicleLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateVehicleLambdaVersiont0WFm9jBrRtphjWeHnKHBHTg53boYq1AdBZxwDzf4"
      },
      "Export": {
        "Name": "sls-aws-reto-indra-dev-CreateVehicleLambdaFunctionQualifiedArn"
      }
    },
    "GetRangeLimitVehicleLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetRangeLimitVehicleLambdaVersionJECxOImu3P6EpVHXYN6vr1Z9sM8qFrZo0n3e3VbMnE"
      },
      "Export": {
        "Name": "sls-aws-reto-indra-dev-GetRangeLimitVehicleLambdaFunctionQualifiedArn"
      }
    },
    "GetAllVehicleLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetAllVehicleLambdaVersionceUBGMTkXVqQGNxrjnqsnozpc0WuiHAMbCgRztpsTI"
      },
      "Export": {
        "Name": "sls-aws-reto-indra-dev-GetAllVehicleLambdaFunctionQualifiedArn"
      }
    },
    "PutStarshipLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PutStarshipLambdaVersionoBbk34EBdMhLfyUbJLUsbYWiKuZGpPJJZBHVz4zagyw"
      },
      "Export": {
        "Name": "sls-aws-reto-indra-dev-PutStarshipLambdaFunctionQualifiedArn"
      }
    },
    "PutVehicleLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PutVehicleLambdaVersioniXSo8WiWC2VAwvdw1uTl1Els7T0BqOrV4xo9woapI"
      },
      "Export": {
        "Name": "sls-aws-reto-indra-dev-PutVehicleLambdaFunctionQualifiedArn"
      }
    },
    "DeleteVehicleLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteVehicleLambdaVersionmGDyA9u2hlbz32KmtyyAkTXg5f2dz6N7cCLsYuLKTZI"
      },
      "Export": {
        "Name": "sls-aws-reto-indra-dev-DeleteVehicleLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-aws-reto-indra-dev-ServiceEndpoint"
      }
    }
  }
}