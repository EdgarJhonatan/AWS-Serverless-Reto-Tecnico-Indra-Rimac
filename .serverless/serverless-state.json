{
  "service": {
    "service": "aws-reto-indra",
    "serviceObject": {
      "name": "aws-reto-indra"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "region": "us-east-2",
      "stage": "dev",
      "environment": {
        "TABLE_STARSHIP": "starship",
        "TABLE_VEHICLE": "vehicle"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:DescribeTable",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteITem"
          ],
          "Resource": [
            "arn:aws:dynamodb:us-east-2:*:table/starship",
            "arn:aws:dynamodb:us-east-2:*:table/vehicle"
          ]
        }
      ],
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CreateStarshipLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-reto-indra-dev-createStarship"
            }
          },
          "GetRangeLimitStarshipLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-reto-indra-dev-getRangeLimitStarship"
            }
          },
          "GettAllStarshipLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-reto-indra-dev-gettAllStarship"
            }
          },
          "PutStarshipLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-reto-indra-dev-putStarship"
            }
          },
          "DeleteStarshipLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-reto-indra-dev-deleteStarship"
            }
          },
          "CreateVehicleLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-reto-indra-dev-createVehicle"
            }
          },
          "GetRangeLimitVehicleLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-reto-indra-dev-getRangeLimitVehicle"
            }
          },
          "GettAllVehicleLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-reto-indra-dev-gettAllVehicle"
            }
          },
          "PutVehicleLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-reto-indra-dev-putVehicle"
            }
          },
          "DeleteVehicleLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-reto-indra-dev-deleteVehicle"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "aws-reto-indra",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-reto-indra-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-reto-indra-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "aws-reto-indra",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreateStarshipLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-reto-indra/dev/1632448465936-2021-09-24T01:54:25.936Z/aws-reto-indra.zip"
              },
              "Handler": "src/handler.createStarship",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-reto-indra-dev-createStarship",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_STARSHIP": "starship",
                  "TABLE_VEHICLE": "vehicle"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateStarshipLogGroup"
            ]
          },
          "GetRangeLimitStarshipLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-reto-indra/dev/1632448465936-2021-09-24T01:54:25.936Z/aws-reto-indra.zip"
              },
              "Handler": "src/handler.getRangeLimitStarship",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-reto-indra-dev-getRangeLimitStarship",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_STARSHIP": "starship",
                  "TABLE_VEHICLE": "vehicle"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetRangeLimitStarshipLogGroup"
            ]
          },
          "GettAllStarshipLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-reto-indra/dev/1632448465936-2021-09-24T01:54:25.936Z/aws-reto-indra.zip"
              },
              "Handler": "src/handler.gettAllStarship",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-reto-indra-dev-gettAllStarship",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_STARSHIP": "starship",
                  "TABLE_VEHICLE": "vehicle"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GettAllStarshipLogGroup"
            ]
          },
          "PutStarshipLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-reto-indra/dev/1632448465936-2021-09-24T01:54:25.936Z/aws-reto-indra.zip"
              },
              "Handler": "src/handler.putStarship",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-reto-indra-dev-putStarship",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_STARSHIP": "starship",
                  "TABLE_VEHICLE": "vehicle"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PutStarshipLogGroup"
            ]
          },
          "DeleteStarshipLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-reto-indra/dev/1632448465936-2021-09-24T01:54:25.936Z/aws-reto-indra.zip"
              },
              "Handler": "src/handler.deleteStarship",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-reto-indra-dev-deleteStarship",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_STARSHIP": "starship",
                  "TABLE_VEHICLE": "vehicle"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteStarshipLogGroup"
            ]
          },
          "CreateVehicleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-reto-indra/dev/1632448465936-2021-09-24T01:54:25.936Z/aws-reto-indra.zip"
              },
              "Handler": "src/handler.createVehicle",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-reto-indra-dev-createVehicle",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_STARSHIP": "starship",
                  "TABLE_VEHICLE": "vehicle"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateVehicleLogGroup"
            ]
          },
          "GetRangeLimitVehicleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-reto-indra/dev/1632448465936-2021-09-24T01:54:25.936Z/aws-reto-indra.zip"
              },
              "Handler": "src/handler.getRangeLimitVehicle",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-reto-indra-dev-getRangeLimitVehicle",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_STARSHIP": "starship",
                  "TABLE_VEHICLE": "vehicle"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetRangeLimitVehicleLogGroup"
            ]
          },
          "GettAllVehicleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-reto-indra/dev/1632448465936-2021-09-24T01:54:25.936Z/aws-reto-indra.zip"
              },
              "Handler": "src/handler.gettAllVehicle",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-reto-indra-dev-gettAllVehicle",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_STARSHIP": "starship",
                  "TABLE_VEHICLE": "vehicle"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GettAllVehicleLogGroup"
            ]
          },
          "PutVehicleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-reto-indra/dev/1632448465936-2021-09-24T01:54:25.936Z/aws-reto-indra.zip"
              },
              "Handler": "src/handler.putVehicle",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-reto-indra-dev-putVehicle",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_STARSHIP": "starship",
                  "TABLE_VEHICLE": "vehicle"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PutVehicleLogGroup"
            ]
          },
          "DeleteVehicleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-reto-indra/dev/1632448465936-2021-09-24T01:54:25.936Z/aws-reto-indra.zip"
              },
              "Handler": "src/handler.deleteVehicle",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-reto-indra-dev-deleteVehicle",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_STARSHIP": "starship",
                  "TABLE_VEHICLE": "vehicle"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteVehicleLogGroup"
            ]
          },
          "CreateStarshipLambdaVersion6GY9YFJgHWi3Uj8PcmAbEM2v8i0YVlJoHtMxWnGIPE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateStarshipLambdaFunction"
              },
              "CodeSha256": "5ww7RogN7SH6rUjL9bMGxFsWUa8Mn0kCjTIuVLAzLgw="
            }
          },
          "GetRangeLimitStarshipLambdaVersionXLznKIfnQufSYrGeuDxk3A8RrS6XRXZUSBCsxToI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetRangeLimitStarshipLambdaFunction"
              },
              "CodeSha256": "5ww7RogN7SH6rUjL9bMGxFsWUa8Mn0kCjTIuVLAzLgw="
            }
          },
          "PutStarshipLambdaVersionLgNHxgjnw2wDvTMtFV2pyrrzFkocZZl4YapsUQTcJKs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PutStarshipLambdaFunction"
              },
              "CodeSha256": "5ww7RogN7SH6rUjL9bMGxFsWUa8Mn0kCjTIuVLAzLgw="
            }
          },
          "GettAllStarshipLambdaVersionJ2hNYEgluD2kmGGxhGJkR1SrefyxDGfCZqq6ZQTU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GettAllStarshipLambdaFunction"
              },
              "CodeSha256": "5ww7RogN7SH6rUjL9bMGxFsWUa8Mn0kCjTIuVLAzLgw="
            }
          },
          "DeleteStarshipLambdaVersiondwenlD9sLIwWraf3FLDpdf1owWLVBvgyzUwyAZvpkQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteStarshipLambdaFunction"
              },
              "CodeSha256": "5ww7RogN7SH6rUjL9bMGxFsWUa8Mn0kCjTIuVLAzLgw="
            }
          },
          "CreateVehicleLambdaVersion13REmRypMT7Q8ANi8Rx85NwHg0kkxAReRZFUbAowtw0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateVehicleLambdaFunction"
              },
              "CodeSha256": "5ww7RogN7SH6rUjL9bMGxFsWUa8Mn0kCjTIuVLAzLgw="
            }
          },
          "GetRangeLimitVehicleLambdaVersionXYSzX2JYH62wIhsl5ZgMaLrJP3zQTqlio3uM0AZfEE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetRangeLimitVehicleLambdaFunction"
              },
              "CodeSha256": "5ww7RogN7SH6rUjL9bMGxFsWUa8Mn0kCjTIuVLAzLgw="
            }
          },
          "GettAllVehicleLambdaVersionfq9rK8s1WFDpriKSbyhwKYm0fPDKgEQqGLCego0A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GettAllVehicleLambdaFunction"
              },
              "CodeSha256": "5ww7RogN7SH6rUjL9bMGxFsWUa8Mn0kCjTIuVLAzLgw="
            }
          },
          "PutVehicleLambdaVersionC6lQ09bCHiW2c0ZiDCPs8GOnsJzG0WBhQhjCFSc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PutVehicleLambdaFunction"
              },
              "CodeSha256": "5ww7RogN7SH6rUjL9bMGxFsWUa8Mn0kCjTIuVLAzLgw="
            }
          },
          "DeleteVehicleLambdaVersionZKF0UKgSgQ7ecgB7ZV98XlLBeX7cSthfy0nkJw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteVehicleLambdaFunction"
              },
              "CodeSha256": "5ww7RogN7SH6rUjL9bMGxFsWUa8Mn0kCjTIuVLAzLgw="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-aws-reto-indra",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceStarship": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "starShip",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceStarshipCreate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceStarship"
              },
              "PathPart": "create",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceStarshipCreateNumberVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceStarshipCreate"
              },
              "PathPart": "{number}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceStarshipGetrangelimit": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceStarship"
              },
              "PathPart": "getRangeLimit",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceStarshipGetrangelimitNumberVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceStarshipGetrangelimit"
              },
              "PathPart": "{number}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceStarshipGetall": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceStarship"
              },
              "PathPart": "getAll",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceStarshipUpdate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceStarship"
              },
              "PathPart": "update",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceStarshipUpdateIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceStarshipUpdate"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceStarshipDelete": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceStarship"
              },
              "PathPart": "delete",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceStarshipDeleteIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceStarshipDelete"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceVehicle": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "vehicle",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceVehicleCreate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceVehicle"
              },
              "PathPart": "create",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceVehicleCreateNumberVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceVehicleCreate"
              },
              "PathPart": "{number}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceVehicleGetrangelimit": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceVehicle"
              },
              "PathPart": "getRangeLimit",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceVehicleGetrangelimitNumberVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceVehicleGetrangelimit"
              },
              "PathPart": "{number}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceVehicleGetall": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceVehicle"
              },
              "PathPart": "getAll",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceVehicleUpdate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceVehicle"
              },
              "PathPart": "update",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceVehicleUpdateIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceVehicleUpdate"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceVehicleDelete": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceVehicle"
              },
              "PathPart": "delete",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceVehicleDeleteIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceVehicleDelete"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodStarshipCreateNumberVarPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {
                "method.request.path.number": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceStarshipCreateNumberVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateStarshipLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayAwsretoindraRequestValidator"
              }
            },
            "DependsOn": [
              "CreateStarshipLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodStarshipGetrangelimitNumberVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.path.number": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceStarshipGetrangelimitNumberVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetRangeLimitStarshipLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayAwsretoindraRequestValidator"
              }
            },
            "DependsOn": [
              "GetRangeLimitStarshipLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodStarshipGetallGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceStarshipGetall"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GettAllStarshipLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GettAllStarshipLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodStarshipUpdateIdVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceStarshipUpdateIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PutStarshipLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayAwsretoindraRequestValidator"
              }
            },
            "DependsOn": [
              "PutStarshipLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodStarshipDeleteIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceStarshipDeleteIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteStarshipLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayAwsretoindraRequestValidator"
              }
            },
            "DependsOn": [
              "DeleteStarshipLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodVehicleCreateNumberVarPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {
                "method.request.path.number": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceVehicleCreateNumberVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateVehicleLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayAwsretoindraRequestValidator"
              }
            },
            "DependsOn": [
              "CreateVehicleLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodVehicleGetrangelimitNumberVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.path.number": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceVehicleGetrangelimitNumberVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetRangeLimitVehicleLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayAwsretoindraRequestValidator"
              }
            },
            "DependsOn": [
              "GetRangeLimitVehicleLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodVehicleGetallGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceVehicleGetall"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GettAllVehicleLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GettAllVehicleLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodVehicleUpdateIdVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceVehicleUpdateIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PutVehicleLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayAwsretoindraRequestValidator"
              }
            },
            "DependsOn": [
              "PutVehicleLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodVehicleDeleteIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceVehicleDeleteIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteVehicleLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayAwsretoindraRequestValidator"
              }
            },
            "DependsOn": [
              "DeleteVehicleLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayAwsretoindraRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true,
              "Name": "aws-reto-indra-dev | Validate request body and querystring parameters"
            }
          },
          "ApiGatewayDeployment1632448458902": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodStarshipCreateNumberVarPost",
              "ApiGatewayMethodStarshipGetrangelimitNumberVarGet",
              "ApiGatewayMethodStarshipGetallGet",
              "ApiGatewayMethodStarshipUpdateIdVarPut",
              "ApiGatewayMethodStarshipDeleteIdVarDelete",
              "ApiGatewayMethodVehicleCreateNumberVarPost",
              "ApiGatewayMethodVehicleGetrangelimitNumberVarGet",
              "ApiGatewayMethodVehicleGetallGet",
              "ApiGatewayMethodVehicleUpdateIdVarPut",
              "ApiGatewayMethodVehicleDeleteIdVarDelete"
            ]
          },
          "CreateStarshipLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateStarshipLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetRangeLimitStarshipLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetRangeLimitStarshipLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GettAllStarshipLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GettAllStarshipLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PutStarshipLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PutStarshipLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteStarshipLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteStarshipLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateVehicleLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateVehicleLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetRangeLimitVehicleLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetRangeLimitVehicleLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GettAllVehicleLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GettAllVehicleLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PutVehicleLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PutVehicleLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteVehicleLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteVehicleLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "StarshipTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "TableName": "starship"
            }
          },
          "VehicleTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "TableName": "vehicle"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-aws-reto-indra-dev-ServerlessDeploymentBucketName"
            }
          },
          "CreateStarshipLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateStarshipLambdaVersion6GY9YFJgHWi3Uj8PcmAbEM2v8i0YVlJoHtMxWnGIPE"
            },
            "Export": {
              "Name": "sls-aws-reto-indra-dev-CreateStarshipLambdaFunctionQualifiedArn"
            }
          },
          "GetRangeLimitStarshipLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetRangeLimitStarshipLambdaVersionXLznKIfnQufSYrGeuDxk3A8RrS6XRXZUSBCsxToI"
            },
            "Export": {
              "Name": "sls-aws-reto-indra-dev-GetRangeLimitStarshipLambdaFunctionQualifiedArn"
            }
          },
          "PutStarshipLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PutStarshipLambdaVersionLgNHxgjnw2wDvTMtFV2pyrrzFkocZZl4YapsUQTcJKs"
            },
            "Export": {
              "Name": "sls-aws-reto-indra-dev-PutStarshipLambdaFunctionQualifiedArn"
            }
          },
          "GettAllStarshipLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GettAllStarshipLambdaVersionJ2hNYEgluD2kmGGxhGJkR1SrefyxDGfCZqq6ZQTU"
            },
            "Export": {
              "Name": "sls-aws-reto-indra-dev-GettAllStarshipLambdaFunctionQualifiedArn"
            }
          },
          "DeleteStarshipLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteStarshipLambdaVersiondwenlD9sLIwWraf3FLDpdf1owWLVBvgyzUwyAZvpkQ"
            },
            "Export": {
              "Name": "sls-aws-reto-indra-dev-DeleteStarshipLambdaFunctionQualifiedArn"
            }
          },
          "CreateVehicleLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateVehicleLambdaVersion13REmRypMT7Q8ANi8Rx85NwHg0kkxAReRZFUbAowtw0"
            },
            "Export": {
              "Name": "sls-aws-reto-indra-dev-CreateVehicleLambdaFunctionQualifiedArn"
            }
          },
          "GetRangeLimitVehicleLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetRangeLimitVehicleLambdaVersionXYSzX2JYH62wIhsl5ZgMaLrJP3zQTqlio3uM0AZfEE"
            },
            "Export": {
              "Name": "sls-aws-reto-indra-dev-GetRangeLimitVehicleLambdaFunctionQualifiedArn"
            }
          },
          "GettAllVehicleLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GettAllVehicleLambdaVersionfq9rK8s1WFDpriKSbyhwKYm0fPDKgEQqGLCego0A"
            },
            "Export": {
              "Name": "sls-aws-reto-indra-dev-GettAllVehicleLambdaFunctionQualifiedArn"
            }
          },
          "PutVehicleLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PutVehicleLambdaVersionC6lQ09bCHiW2c0ZiDCPs8GOnsJzG0WBhQhjCFSc"
            },
            "Export": {
              "Name": "sls-aws-reto-indra-dev-PutVehicleLambdaFunctionQualifiedArn"
            }
          },
          "DeleteVehicleLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteVehicleLambdaVersionZKF0UKgSgQ7ecgB7ZV98XlLBeX7cSthfy0nkJw"
            },
            "Export": {
              "Name": "sls-aws-reto-indra-dev-DeleteVehicleLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-aws-reto-indra-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "settings": {
        "TABLE_STARSHIP": "starship",
        "TABLE_VEHICLE": "vehicle"
      }
    },
    "plugins": [
      "serverless-offline",
      "serverless-plugin-include-dependencies",
      "serverless-mocha-plugin"
    ],
    "pluginsData": {},
    "functions": {
      "createStarship": {
        "handler": "src/handler.createStarship",
        "events": [
          {
            "http": {
              "path": "starShip/create/{number}",
              "method": "post",
              "request": {
                "parameters": {
                  "method.request.path.number": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-reto-indra-dev-createStarship",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "CreateStarshipLambdaVersion6GY9YFJgHWi3Uj8PcmAbEM2v8i0YVlJoHtMxWnGIPE"
      },
      "getRangeLimitStarship": {
        "handler": "src/handler.getRangeLimitStarship",
        "events": [
          {
            "http": {
              "path": "starShip/getRangeLimit/{number}",
              "method": "get",
              "request": {
                "parameters": {
                  "method.request.path.number": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-reto-indra-dev-getRangeLimitStarship",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GetRangeLimitStarshipLambdaVersionXLznKIfnQufSYrGeuDxk3A8RrS6XRXZUSBCsxToI"
      },
      "gettAllStarship": {
        "handler": "src/handler.gettAllStarship",
        "events": [
          {
            "http": {
              "path": "starShip/getAll",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-reto-indra-dev-gettAllStarship",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GettAllStarshipLambdaVersionJ2hNYEgluD2kmGGxhGJkR1SrefyxDGfCZqq6ZQTU"
      },
      "putStarship": {
        "handler": "src/handler.putStarship",
        "events": [
          {
            "http": {
              "path": "starShip/update/{id}",
              "method": "put",
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-reto-indra-dev-putStarship",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PutStarshipLambdaVersionLgNHxgjnw2wDvTMtFV2pyrrzFkocZZl4YapsUQTcJKs"
      },
      "deleteStarship": {
        "handler": "src/handler.deleteStarship",
        "events": [
          {
            "http": {
              "path": "starShip/delete/{id}",
              "method": "delete",
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-reto-indra-dev-deleteStarship",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "DeleteStarshipLambdaVersiondwenlD9sLIwWraf3FLDpdf1owWLVBvgyzUwyAZvpkQ"
      },
      "createVehicle": {
        "handler": "src/handler.createVehicle",
        "events": [
          {
            "http": {
              "path": "vehicle/create/{number}",
              "method": "post",
              "request": {
                "parameters": {
                  "method.request.path.number": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-reto-indra-dev-createVehicle",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "CreateVehicleLambdaVersion13REmRypMT7Q8ANi8Rx85NwHg0kkxAReRZFUbAowtw0"
      },
      "getRangeLimitVehicle": {
        "handler": "src/handler.getRangeLimitVehicle",
        "events": [
          {
            "http": {
              "path": "vehicle/getRangeLimit/{number}",
              "method": "get",
              "request": {
                "parameters": {
                  "method.request.path.number": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-reto-indra-dev-getRangeLimitVehicle",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GetRangeLimitVehicleLambdaVersionXYSzX2JYH62wIhsl5ZgMaLrJP3zQTqlio3uM0AZfEE"
      },
      "gettAllVehicle": {
        "handler": "src/handler.gettAllVehicle",
        "events": [
          {
            "http": {
              "path": "vehicle/getAll",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-reto-indra-dev-gettAllVehicle",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GettAllVehicleLambdaVersionfq9rK8s1WFDpriKSbyhwKYm0fPDKgEQqGLCego0A"
      },
      "putVehicle": {
        "handler": "src/handler.putVehicle",
        "events": [
          {
            "http": {
              "path": "vehicle/update/{id}",
              "method": "put",
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-reto-indra-dev-putVehicle",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PutVehicleLambdaVersionC6lQ09bCHiW2c0ZiDCPs8GOnsJzG0WBhQhjCFSc"
      },
      "deleteVehicle": {
        "handler": "src/handler.deleteVehicle",
        "events": [
          {
            "http": {
              "path": "vehicle/delete/{id}",
              "method": "delete",
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-reto-indra-dev-deleteVehicle",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "DeleteVehicleLambdaVersionZKF0UKgSgQ7ecgB7ZV98XlLBeX7cSthfy0nkJw"
      }
    },
    "resources": {
      "Resources": {
        "StarshipTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            },
            "TableName": "starship"
          }
        },
        "VehicleTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            },
            "TableName": "vehicle"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "package": [
        "node_modules/**",
        "test/**"
      ],
      "frameworkVersion": "2",
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/gerardo/PC ACCESO/Edgar/AWS/Indra/aws-serverless-reto-indra/.serverless/aws-reto-indra.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/aws-reto-indra/dev/1632448465936-2021-09-24T01:54:25.936Z",
    "artifact": "aws-reto-indra.zip"
  }
}